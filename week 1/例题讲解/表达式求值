问题拆分：
    1.中缀表达式转为后缀表达式。
    2.运算后缀表达式

后缀表达式计算：https://leetcode-cn.com/problems/evaluate-reverse-polish-notation/
    遇到符号才计算，并且最近遇到的两个数字，所以数字入栈，计算的结果也入栈，最后的结果存放在栈中。

1—2+1 --> 12-1+
1—2*1 --> 121*-

中缀表达式转为后缀表达式：
    1.数字的顺序不需要改变，直接进入后缀序列，
    2.先出现的符号要和后面的符号比较，所以符号入栈，当前的符号的优先级要是比小于等于栈中的符号，则栈中的符号出栈，入后缀序列。
    3.如有括号，遇到(直接入栈。 遇到)，则将栈中最近遇到（和其栈之上的符号出栈，入后缀表达式，并且括号不后缀表达式。
    4.对于负数-n，可以采用不零操作，即0-n。实现的时候，采用先假设要标志位需要补零，遇到数字、空格、）改为不补零，遇到运算符和(,运算符号需要补零，
    当下一轮遇到+/-,如果标识需要补零，则0入后缀序列。为了处理-1+2这种场景，初始化时为需要补零