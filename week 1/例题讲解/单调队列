整体思想：
	和单调栈基本一致，需要确定单调性和迭代方向：
题目1：滑动窗口最大值
	https://leetcode-cn.com/problems/sliding-window-maximum/
	
思路：
	1.迭代方向和窗口方向一致，从左到右
	2.单调递减的条件下，已遍历的数才可能是结果。
	3.当单调性被破坏，需要调整队列尾部。
	4.由于窗口滑动，当前不在窗口范围的队列头部元素，需要出队列。
	5.为了判断是否超出窗口范围，队列存入元素的下标位置。
代码：
	class Solution {
	public:
    vector<int> maxSlidingWindow(vector<int>& nums, int k) {
        vector<int> ans;
        for (int i = 0; i < nums.size(); i++) {
            while (!queue.empty() && queue.front() + k <= i) {
                queue.pop_front();
            }
            while (!queue.empty() && nums[i] >= nums[queue.back()]) {
                queue.pop_back();
            }
            queue.push_back(i);
            if (i + 1 >= k) {
                ans.push_back(nums[queue.front()]);
            }
        }
        return ans;
    }
	private:
		deque<int> queue;
	};